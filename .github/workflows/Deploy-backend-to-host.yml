name: Deploy backend to host

on:
  push:
    branches:
      - main  # Runs on push to the main branch

jobs:
  docker:
    runs-on: ubuntu-latest  # Running the job on the latest Ubuntu environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Checkout the repository so we can access it

      - name: Setup Java
        uses: actions/setup-java@v4  # Setup Java environment
        with:
          java-version: '17'  # Set Java version to 17
          distribution: 'adopt'  # AdoptOpenJDK distribution

      - name: Run Maven to build the project
        run: |
          mvn clean install -DskipTests -B  # Clean and build project without running tests
          mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)  # Prepare dependencies

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Setup Docker Buildx for multi-platform builds

      - name: Login to Docker Hub
        uses: docker/login-action@v2  # Login to Docker Hub
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Use Docker Hub credentials from GitHub secrets
          password: ${{ secrets.DOCKER_HUB_TOKEN }}  # Docker Hub Access Token from secrets

      - name: Build and push Docker image
        uses: docker/build-push-action@v6  # Build and push the Docker image
        with:
          context: .  # Current directory context for Docker build
          push: true  # Push the image to Docker Hub
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/234-deploylab-backend:latest  # Image tag format

      - name: Copy docker-compose.yml via SSH
        uses: appleboy/scp-action@v0.1.7  # Use SCP to copy the docker-compose.yml file
        with:
          host: ${{ secrets.HOST_SERVER }}  # Server IP from secrets
          username: ${{ secrets.HOST_USER_NAME }}  # SSH username from secrets
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}  # SSH private key from secrets
          port: 22  # SSH port
          source: "docker-compose.yml"  # Source file to copy
          target: "/home/ubuntu/backend"  # Target directory on the server

      - name: Run docker-compose on the server
        uses: appleboy/ssh-action@v1.2.1  # Run Docker commands on the server via SSH
        with:
          host: ${{ secrets.HOST_SERVER }}  # Server IP from secrets
          username: ${{ secrets.HOST_USER_NAME }}  # SSH username from secrets
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}  # SSH private key from secrets.
          port: 22  # SSH ports
          script: |
            cd /home/ubuntu/backend
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            docker compose down  # Stop any running containers
            docker compose pull  # Pull the latest image
            docker compose up -d  # Start the containers in detached mode
            rm -rf /home/ubuntu/backend  # Clean up the local backend directory
            # this is just a comment